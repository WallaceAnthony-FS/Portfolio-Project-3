import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { getServerSession } from "next-auth";
import { useRouter } from "next/router";

import { api } from "~/utils/api";
import { prisma } from "~/server/db";
import { authOptions } from "~/server/auth";
import getAlbums from "../api/albums";
import getCategories from "../api/categories";
import getGenres from "../api/genres";
import search from "../api/search"


export async function getServerSideProps(context) {
  const session = await getServerSession(context.req, context.res, authOptions)
  if(session && session.user){
    const account = await prisma.account.findFirst({
        where: {
          userId: session.user.id
      }})

      const albums = await getAlbums(account)
      const categories = await getCategories(account)
      const genres = await getGenres(account)
      const searchResults = await search(account, "test")

      return {
        props: {
          albums,
          categories,
          genres,
          searchResults
        }
      }
  }
  return {
    props: {}
  }
}

const Dashboard: NextPage = (props) => {  

    const router = useRouter()
    const { data: sessionData, status } = useSession();
    if(status === "unauthenticated"){
        router.push("/")
    }
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Portfolio Project 3
          </h1>
          <div className="flex flex-col items-center gap-2">
            <SigninWithAuth />
          </div>
        </div>
      </main>
    </>
  );
};

export default Dashboard;

const SigninWithAuth: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
